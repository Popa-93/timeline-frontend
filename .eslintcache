[{"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\index.tsx":"1","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\reportWebVitals.js":"2","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\App.tsx":"3","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\ErrorBoundary.tsx":"4","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\Title.tsx":"5","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\UserIdent.tsx":"6","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\ActivityFilter.tsx":"7","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\RecordList.tsx":"8","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\RecordItem.tsx":"9","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\RecordActivity.tsx":"10","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\RecordDate.tsx":"11","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\RecordContent.tsx":"12","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\ActivityAvatarEditor.tsx":"13","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\LogoutDialog.tsx":"14","C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\ActivitySelection.tsx":"15"},{"size":596,"mtime":1610241728296,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1610241802323,"results":"18","hashOfConfig":"17"},{"size":6158,"mtime":1611682419981,"results":"19","hashOfConfig":"17"},{"size":693,"mtime":1610366569009,"results":"20","hashOfConfig":"17"},{"size":4427,"mtime":1611669327336,"results":"21","hashOfConfig":"17"},{"size":3164,"mtime":1611682657869,"results":"22","hashOfConfig":"17"},{"size":3720,"mtime":1611676043428,"results":"23","hashOfConfig":"17"},{"size":2336,"mtime":1611682041299,"results":"24","hashOfConfig":"17"},{"size":4761,"mtime":1611688296765,"results":"25","hashOfConfig":"17"},{"size":2205,"mtime":1611682339344,"results":"26","hashOfConfig":"17"},{"size":1025,"mtime":1610241750537,"results":"27","hashOfConfig":"17"},{"size":2179,"mtime":1610244523755,"results":"28","hashOfConfig":"17"},{"size":1989,"mtime":1611668963145,"results":"29","hashOfConfig":"17"},{"size":3583,"mtime":1610241691235,"results":"30","hashOfConfig":"17"},{"size":5607,"mtime":1611682125321,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"4s33wq",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\index.tsx",[],["67","68"],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\reportWebVitals.js",[],["69","70"],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\App.tsx",[],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\ErrorBoundary.tsx",[],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\Title.tsx",[],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\UserIdent.tsx",[],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\ActivityFilter.tsx",[],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\RecordList.tsx",[],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\RecordItem.tsx",[],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\RecordActivity.tsx",[],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\RecordDate.tsx",[],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\RecordContent.tsx",[],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\ActivityAvatarEditor.tsx",["71"],"import { useState } from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AvatarEdit from \"react-avatar-edit\";\r\nimport { styled, useTheme } from \"@material-ui/core/styles\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport PropTypes from \"prop-types\";\r\nimport DoneOutlineIcon from \"@material-ui/icons/DoneOutline\";\r\n\r\nconst StyledPaper = styled(Paper)(spacing);\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  validateButton: {\r\n    color: \"white\",\r\n    minWidth: 20,\r\n    width: 20,\r\n    minHeight: 20,\r\n    height: 20,\r\n    position: \"absolute\",\r\n    zIndex: 999,\r\n    cursor: \"pointer\",\r\n    right: theme.spacing(1) + 10,\r\n    top: theme.spacing(1) + 10,\r\n    backgroundColor: \"transparent\",\r\n    border: \"none\",\r\n  },\r\n}));\r\n\r\nexport default function ActivityAvatarEditor(props) {\r\n  const [avatar, setAvatar] = useState(\"\"); //TODO precise avatar format png Img\r\n  const [allowValidation, setAllowValidation] = useState(false);\r\n  const theme = useTheme();\r\n  const classes = useStyles(theme);\r\n\r\n  return (\r\n    <StyledPaper p={1} variant=\"outlined\">\r\n      <AvatarEdit\r\n        width={390}\r\n        height={295}\r\n        onCrop={(avatar) => {\r\n          //TODO console.log(\"Oncrop Avatar =\", avatar);\r\n          setAvatar(avatar);\r\n          setAllowValidation(true);\r\n        }}\r\n        onClose={() => props.onClose()}\r\n        //label=\"Coucou\" //TODO I18N\r\n        //onBeforeFileLoad={this.onBeforeFileLoad}\r\n        src=\"\"\r\n      ></AvatarEdit>\r\n      {allowValidation && (\r\n        <DoneOutlineIcon\r\n          aria-label=\"Validate\"\r\n          onClick={(e) => {\r\n            e.stopPropagation();\r\n            props.onClose();\r\n          }}\r\n          className={classes.validateButton}\r\n        />\r\n      )}\r\n    </StyledPaper>\r\n  );\r\n}\r\n\r\nActivityAvatarEditor.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  setNewAvatar: PropTypes.func.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n",["72","73"],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\LogoutDialog.tsx",[],"C:\\Users\\moafr\\Training_react\\Projet\\timeline_frontend\\src\\ActivitySelection.tsx",["74","75","76","77"],"import { useState } from \"react\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport ActivityAvatarEditor from \"./ActivityAvatarEditor\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  popper: {\r\n    zIndex: 1,\r\n    display: \"inline-block\",\r\n\r\n    '&[x-placement*=\"right\"] $arrow': {\r\n      left: 0,\r\n      marginLeft: \"-0.9em\",\r\n      height: \"3em\",\r\n      width: \"1em\",\r\n      \"&::before\": {\r\n        borderWidth: \"1em 1em 1em 0\",\r\n        borderColor: `transparent ${theme.palette.background.paper} transparent transparent`,\r\n      },\r\n    },\r\n  },\r\n  arrow: {\r\n    position: \"absolute\",\r\n    fontSize: 7,\r\n    width: \"3em\",\r\n    height: \"3em\",\r\n    \"&::before\": {\r\n      content: '\"\"',\r\n      margin: \"auto\",\r\n      display: \"block\",\r\n      width: 0,\r\n      height: 0,\r\n      borderStyle: \"solid\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ActivitySelection(props) {\r\n  const [arrowRef, setArrowRef] = useState(null);\r\n  const [editorOpened, setEditorOpened] = useState(false);\r\n  const [newAvatar, setNewAvatar] = useState(null);\r\n  const [newAvatarName, setNewAvatarName] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ClickAwayListener\r\n      mouseEvent=\"onMouseDown\"\r\n      touchEvent=\"onTouchStart\"\r\n      onClickAway={() => {\r\n        props.onClose();\r\n      }}\r\n    >\r\n      <Popper\r\n        className={classes.popper}\r\n        //aria-labelledby=\"simple-dialog-title\"\r\n        open={props.open}\r\n        anchorEl={props.activityIconRef}\r\n        placement={\"right-start\"}\r\n        modifiers={{\r\n          hide: {\r\n            enabled: false,\r\n          },\r\n          preventOverflow: {\r\n            enabled: false,\r\n          },\r\n          arrow: {\r\n            enabled: true,\r\n            element: arrowRef,\r\n          },\r\n          offset: {\r\n            enabled: true,\r\n            offset: \"0, 3em\",\r\n          },\r\n        }}\r\n      >\r\n        <span className={classes.arrow} ref={setArrowRef} />\r\n        <Paper variant=\"outlined\">\r\n          <List>\r\n            {props.activities &&\r\n              props.activities.map((activity) => {\r\n                return (\r\n                  <ListItem\r\n                    key={activity.id}\r\n                    button\r\n                    onClick={() => props.updateActivityID(activity.id)}\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar src={activity.avatar}></Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n                        console.log(\"Edit cat name\");\r\n                      }}\r\n                    >\r\n                      <Input\r\n                        fullWidth\r\n                        disableUnderline\r\n                        //readOnly To switch mode TODO\r\n                        value={activity.name}\r\n                        onChange={\r\n                          //TODO\r\n                          (e) => props.setNewAvatarName(e.target.value)\r\n                        }\r\n                        placeholder=\"Titre\"\r\n                        //TODO I18N\r\n                      />\r\n                      {/* TODO Limit input size On all Inputs */}\r\n                    </ListItemText>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n            <ListItem\r\n              autoFocus\r\n              button\r\n              onClick={() => {\r\n                setEditorOpened(true);\r\n              }}\r\n            >\r\n              <Dialog\r\n                onMouseDown={(e) => {\r\n                  e.stopPropagation();\r\n                }}\r\n                style={{ zIndex: 2, display: \"inline-block\" }}\r\n                aria-labelledby=\"Avatar editor\"\r\n                open={editorOpened}\r\n                onClose={() => {\r\n                  setEditorOpened(false);\r\n                  props.onClose();\r\n                }}\r\n              >\r\n                <ActivityAvatarEditor\r\n                  open={editorOpened}\r\n                  setNewAvatar={(newAvatar) => {\r\n                    setEditorOpened(false);\r\n                  }}\r\n                  onClose={() => {\r\n                    setEditorOpened(false);\r\n                  }}\r\n                />\r\n              </Dialog>\r\n              <ListItemAvatar>\r\n                <Avatar>\r\n                  <AddIcon />\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary=\"Add category\" />\r\n              {/* //TODO I18n */}\r\n            </ListItem>\r\n          </List>\r\n        </Paper>\r\n      </Popper>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n\r\nActivitySelection.propTypes = {\r\n  open: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n  activityIconRef: PropTypes.object.isRequired,\r\n  activities: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  setActivities: PropTypes.func.isRequired,\r\n  updateActivityID: PropTypes.func.isRequired,\r\n};\r\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":31,"column":10,"nodeType":"84","messageId":"85","endLine":31,"endColumn":16},{"ruleId":"78","replacedBy":"86"},{"ruleId":"80","replacedBy":"87"},{"ruleId":"82","severity":1,"message":"88","line":54,"column":10,"nodeType":"84","messageId":"85","endLine":54,"endColumn":19},{"ruleId":"82","severity":1,"message":"89","line":54,"column":21,"nodeType":"84","messageId":"85","endLine":54,"endColumn":33},{"ruleId":"82","severity":1,"message":"90","line":55,"column":10,"nodeType":"84","messageId":"85","endLine":55,"endColumn":23},{"ruleId":"82","severity":1,"message":"91","line":55,"column":25,"nodeType":"84","messageId":"85","endLine":55,"endColumn":41},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"@typescript-eslint/no-unused-vars","'avatar' is assigned a value but never used.","Identifier","unusedVar",["92"],["93"],"'newAvatar' is assigned a value but never used.","'setNewAvatar' is assigned a value but never used.","'newAvatarName' is assigned a value but never used.","'setNewAvatarName' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]